# Generated by Django 5.1 on 2024-08-28 16:02

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('first_connection', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Missive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logs', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('update_count', models.PositiveBigIntegerField(default=0)),
                ('note', models.TextField(blank=True, null=True)),
                ('cache', models.JSONField(blank=True, default=dict, null=True)),
                ('mode', models.CharField(choices=[('EMAIL', 'email'), ('SMS', 'sms')], default='EMAIL', max_length=8)),
                ('status', models.CharField(choices=[('PREPARE', 'prepare'), ('SENT', 'sent'), ('RECEIVED', 'received'), ('ERROR', 'error')], default='PREPARE', max_length=8)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sender', models.CharField(blank=True, max_length=255, null=True)),
                ('reply', models.CharField(blank=True, max_length=255, null=True)),
                ('target', models.CharField(max_length=255)),
                ('service', models.CharField(blank=True, max_length=255, null=True)),
                ('denomination', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('header_html', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('footer_html', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('subject', models.CharField(max_length=255)),
                ('template', models.CharField(blank=True, max_length=255, null=True)),
                ('html', django_ckeditor_5.fields.CKEditor5Field()),
                ('txt', models.TextField()),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('backend', models.CharField(editable=False, max_length=255)),
                ('msg_id', models.CharField(blank=True, max_length=255, null=True)),
                ('response', models.TextField(blank=True, editable=False, null=True)),
                ('partner_id', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('code_error', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('trace', models.TextField(blank=True, editable=False, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'missive',
                'verbose_name_plural': 'missives',
                'abstract': False,
            },
        ),
    ]
